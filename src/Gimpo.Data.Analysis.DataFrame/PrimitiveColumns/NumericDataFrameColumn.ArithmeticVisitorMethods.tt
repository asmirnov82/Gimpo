<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="NumericTypesTemplate.ttinclude" #>
// Generated from NumericDataFrameColumn.ArithmeticVisitorMethods.tt. Do not modify directly

using System;
using System.Collections.Generic;
using Gimpo.Data.Primitives;

namespace Gimpo.Data.Analysis
{
    public abstract partial class NumericDataFrameColumn<T>
    {
<# foreach (TypeConfiguration type in typeConfiguration) { #>
        DataFrameColumn INumericArithmeticComputationVisitor.Add(NativeMemoryNullableVector<<#=type.TypeName#>> values, bool inPlace)
        {
            var result = inPlace ? this : CreateNewColumn("Add", Length, true);
            ArithmeticComputation.Add(_values, values, result._values);

            return result;
        }

        DataFrameColumn INumericArithmeticComputationVisitor.ReverseAdd(NativeMemoryNullableVector<<#=type.TypeName#>> values)
        {
            var result = CreateNewColumn("Add", Length, true);
            ArithmeticComputation.ReverseAdd(values, _values, result._values);

            return result;
        }

        DataFrameColumn INumericArithmeticComputationVisitor.Substract(NativeMemoryNullableVector<<#=type.TypeName#>> values, bool inPlace)
        {
            var result = inPlace ? this : CreateNewColumn("Substract", Length, true);
            ArithmeticComputation.Substract(_values, values, result._values);

            return result;
        }

        DataFrameColumn INumericArithmeticComputationVisitor.ReverseSubstract(NativeMemoryNullableVector<<#=type.TypeName#>> values)
        {
            var result = CreateNewColumn("Substract", Length, true);
            ArithmeticComputation.ReverseSubstract(values, _values, result._values);

            return result;
        }

<# } #>
    }
}
