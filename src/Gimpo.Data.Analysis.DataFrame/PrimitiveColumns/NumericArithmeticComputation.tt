<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="NumericTypesTemplate.ttinclude" #>
// Generated from NumericArithmeticComputation.tt. Do not modify directly

using System;
using System.Collections.Generic;
using Gimpo.Data.Primitives;

namespace Gimpo.Data.Analysis
{
    public abstract class NumericArithmeticComputation<T>  where T : unmanaged
    {
<# foreach (TypeConfiguration type in typeConfiguration) { #>
        public virtual void Add(NativeMemoryNullableVector<T> left, NativeMemoryNullableVector<<#=type.TypeName#>> right, NativeMemoryNullableVector<T> result) => throw new NotSupportedException();
        public virtual void ReverseAdd(NativeMemoryNullableVector<<#=type.TypeName#>> left, NativeMemoryNullableVector<T> right, NativeMemoryNullableVector<T> result) => throw new NotSupportedException();

<# } #>

<# foreach (TypeConfiguration type in typeConfiguration) { #>
        public virtual void Substract(NativeMemoryNullableVector<T> left, NativeMemoryNullableVector<<#=type.TypeName#>> right, NativeMemoryNullableVector<T> result) => throw new NotSupportedException();
        public virtual void ReverseSubstract(NativeMemoryNullableVector<<#=type.TypeName#>> left, NativeMemoryNullableVector<T> right, NativeMemoryNullableVector<T> result) => throw new NotSupportedException();

<# } #>
    }
}
